{"ast":null,"code":"import _objectSpread from\"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from'react';import{useGLTF}from'@react-three/drei';import{useStore}from'./store.js';import{useFrame}from'@react-three/fiber';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Switch(props){var _useGLTF=useGLTF('/switch_mx.gltf'),nodes=_useGLTF.nodes,materials=_useGLTF.materials;var shellcolor=useStore(function(state){return state.color;});return/*#__PURE__*/_jsx(\"mesh\",_objectSpread(_objectSpread({},props),{},{geometry:nodes.mesh_0.geometry,material:nodes.mesh_0.material,children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{attach:\"material\",color:shellcolor})}))//to make transparent add:\n//color=\"#ff0000\" opacity={0.1} transparent\n//toggle opacity value to change transparency.\n;}useGLTF.preload('/switch_mx.gltf');","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/Switch.js"],"names":["React","useRef","useGLTF","useStore","useFrame","Switch","props","nodes","materials","shellcolor","state","color","mesh_0","geometry","material","preload"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAAQC,QAAR,KAAuB,YAAvB,CACA,OAASC,QAAT,KAAyB,oBAAzB,C,2CAGA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACpC,aAA6BJ,OAAO,CAAC,iBAAD,CAApC,CAAQK,KAAR,UAAQA,KAAR,CAAeC,SAAf,UAAeA,SAAf,CACA,GAAMC,CAAAA,UAAU,CAAGN,QAAQ,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EAAN,CAA3B,CACA,mBACM,2CAAUL,KAAV,MAAiB,QAAQ,CAAEC,KAAK,CAACK,MAAN,CAAaC,QAAxC,CAAkD,QAAQ,CAAEN,KAAK,CAACK,MAAN,CAAaE,QAAzE,uBAEE,6BACI,MAAM,CAAC,UADX,CAEI,KAAK,CAAEL,UAFX,EAFF,GAOF;AACA;AACA;AAVJ,CAYD,CAEDP,OAAO,CAACa,OAAR,CAAgB,iBAAhB","sourcesContent":["import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport {useStore} from './store.js';\nimport { useFrame } from '@react-three/fiber';\n\n\nexport default function Switch(props) {\n  const { nodes, materials } = useGLTF('/switch_mx.gltf')\n  const shellcolor = useStore(state => state.color)\n  return (\n        <mesh {...props} geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} >\n\n          <meshStandardMaterial\n              attach=\"material\"\n              color={shellcolor}\n          />\n        </mesh>\n      //to make transparent add:\n      //color=\"#ff0000\" opacity={0.1} transparent\n      //toggle opacity value to change transparency.\n  )\n}\n\nuseGLTF.preload('/switch_mx.gltf')\n\n"]},"metadata":{},"sourceType":"module"}