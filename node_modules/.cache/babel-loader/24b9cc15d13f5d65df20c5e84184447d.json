{"ast":null,"code":"var _jsxFileName = \"/home/hunter/github/drone-parts-planner/src/App.js\";\nimport './App.css';\nimport { Canvas } from '@react-three/fiber';\nimport './Model.js';\nimport Model from './Model.js';\nimport { Environment } from '@react-three/drei';\nimport { Suspense } from 'react';\nimport { Html } from '@react-three/drei';\nimport { Light } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sphere() {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    visible: true,\n    userData: {\n      test: \"hello\"\n    },\n    position: [0, 0, 0],\n    castShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      attach: \"geometry\",\n      args: [1, 16, 16]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"white\",\n      transparent: true,\n      roughness: 0.1,\n      metalness: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Sphere;\n\nconst Scene = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \"/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Scene;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Scene, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = App;\n\nrequire('react-dom');\n\nwindow.React2 = require('react');\nconsole.log(window.React1 === window.React2);\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Sphere\");\n$RefreshReg$(_c2, \"Scene\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/hunter/github/drone-parts-planner/src/App.js"],"names":["Canvas","Model","Environment","Suspense","Html","Light","Sphere","test","Scene","App","require","window","React2","console","log","React1"],"mappings":";AAAA,OAAO,WAAP;AACA,SAAQA,MAAR,QAAqB,oBAArB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,WAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,QAAsB,OAAtB;;;AACA,SAASC,MAAT,GAAkB;AAChB,sBACE;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAxB;AAA2C,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArD;AAAgE,IAAA,UAAU,MAA1E;AAAA,4BACE;AAAgB,MAAA,MAAM,EAAC,UAAvB;AAAkC,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,MAAM,EAAC,UADT;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,SAAS,EAAE,GAJb;AAKE,MAAA,SAAS,EAAE;AALb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQD,M;;AAeT,MAAME,KAAK,GAAG,MAAM;AAClB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,IAApB;AAAA,6BAEH,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;MAAMA,K;;AAcN,MAAMC,GAAG,GAAG,MAAM;AAChB,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMA,G;;AAGNC,OAAO,CAAC,WAAD,CAAP;;AACAC,MAAM,CAACC,MAAP,GAAgBF,OAAO,CAAC,OAAD,CAAvB;AACAG,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,MAAP,KAAkBJ,MAAM,CAACC,MAArC;AACA,eAAeH,GAAf","sourcesContent":["import './App.css';\nimport {Canvas} from '@react-three/fiber'\nimport './Model.js'\nimport Model from './Model.js';\nimport  {Environment} from '@react-three/drei';\nimport { Suspense } from 'react'\nimport { Html } from '@react-three/drei'\nimport { Light } from 'three';\nfunction Sphere() {\n  return (\n    <mesh visible userData={{ test: \"hello\" }} position={[0, 0, 0]} castShadow>\n      <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"white\"\n        transparent\n        roughness={0.1}\n        metalness={0.1}\n      />\n    </mesh>\n  );\n}\n\nconst Scene = () => {\n  return(\n    <Canvas>\n      <Suspense fallback={null}>\n\n   <Test/>\n\n      </Suspense>\n      \n   /\n    </Canvas>\n  );\n}\n\nconst App = () => {\n  return <Scene />;\n};\nrequire('react-dom');\nwindow.React2 = require('react');\nconsole.log(window.React1 === window.React2);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}