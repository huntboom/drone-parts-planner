{"ast":null,"code":"import _objectSpread from\"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from\"react\";import{useGLTF}from\"@react-three/drei\";import{useStore}from'./store.js';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Switchtop(props){var group=useRef();var switchcolor=useStore(function(state){return state.switchcolor;});var _useGLTF=useGLTF(\"/switch_top.gltf\"),nodes=_useGLTF.nodes,materials=_useGLTF.materials;return/*#__PURE__*/_jsx(\"group\",_objectSpread(_objectSpread({ref:group},props),{},{dispose:null,children:/*#__PURE__*/_jsx(\"mesh\",{castShadow:true,receiveShadow:true,geometry:nodes['\"switch_top\"'].geometry,material:nodes['\"switch_top\"'].material,children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{attach:\"material\",color:switchcolor})})}));}useGLTF.preload(\"/switch_top.gltf\");","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/Switch_top.js"],"names":["React","useRef","useGLTF","useStore","Switchtop","props","group","switchcolor","state","nodes","materials","geometry","material","preload"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,QAAT,KAAyB,YAAzB,C,2CACA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACvC,GAAMC,CAAAA,KAAK,CAAGL,MAAM,EAApB,CACA,GAAMM,CAAAA,WAAW,CAAGJ,QAAQ,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACD,WAAV,EAAN,CAA5B,CACA,aAA6BL,OAAO,CAAC,kBAAD,CAApC,CAAQO,KAAR,UAAQA,KAAR,CAAeC,SAAf,UAAeA,SAAf,CACA,mBACE,0CAAO,GAAG,CAAEJ,KAAZ,EAAuBD,KAAvB,MAA8B,OAAO,CAAE,IAAvC,uBACE,aACE,UAAU,KADZ,CAEE,aAAa,KAFf,CAGE,QAAQ,CAAEI,KAAK,CAAC,cAAD,CAAL,CAAsBE,QAHlC,CAIE,QAAQ,CAAEF,KAAK,CAAC,cAAD,CAAL,CAAsBG,QAJlC,uBAMI,6BACI,MAAM,CAAC,UADX,CAEI,KAAK,CAAEL,WAFX,EANJ,EADF,GADF,CAeD,CAEDL,OAAO,CAACW,OAAR,CAAgB,kBAAhB","sourcesContent":["import React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { useStore } from './store.js';\nexport default function Switchtop(props) {\n  const group = useRef();\n  const switchcolor = useStore(state => state.switchcolor)\n  const { nodes, materials } = useGLTF(\"/switch_top.gltf\");\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes['\"switch_top\"'].geometry}\n        material={nodes['\"switch_top\"'].material}\n      >\n          <meshStandardMaterial\n              attach=\"material\"\n              color={switchcolor}\n          />\n      </mesh>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/switch_top.gltf\");\n"]},"metadata":{},"sourceType":"module"}