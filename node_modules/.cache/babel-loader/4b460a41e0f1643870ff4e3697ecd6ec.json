{"ast":null,"code":"var _jsxFileName = \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/BottomRight.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useStore } from './store.js';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BottomRight(props) {\n  _s();\n\n  const {\n    nodes,\n    materials\n  } = useGLTF('/Bottom_Right.gltf');\n  const shellcolor = useStore(state => state.color);\n  const clearnessshell = useStore(state => state.clearnessshell);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    geometry: nodes.mesh_0.geometry,\n    material: nodes.mesh_0.material,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: shellcolor,\n      opacity: clearnessshell,\n      transparent: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this) //to make transparent add:\n  //color=\"#ff0000\" opacity={0.1} transparent\n  //toggle opacity value to change transparency.\n  ;\n}\n\n_s(BottomRight, \"N5xmKqW54XlFtRAG5cKrqBzt4a8=\", false, function () {\n  return [useGLTF, useStore, useStore];\n});\n\n_c = BottomRight;\nuseGLTF.preload('/Bottom_Right.gltf');\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomRight\");","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/BottomRight.js"],"names":["React","useRef","useGLTF","useStore","useFrame","BottomRight","props","nodes","materials","shellcolor","state","color","clearnessshell","mesh_0","geometry","material","preload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBN,OAAO,CAAC,oBAAD,CAApC;AACA,QAAMO,UAAU,GAAGN,QAAQ,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA3B;AACA,QAAMC,cAAc,GAAGT,QAAQ,CAACO,KAAK,IAAGA,KAAK,CAACE,cAAf,CAA/B;AACA,sBACM,qBAAUN,KAAV;AAAiB,IAAA,QAAQ,EAAEC,KAAK,CAACM,MAAN,CAAaC,QAAxC;AAAkD,IAAA,QAAQ,EAAEP,KAAK,CAACM,MAAN,CAAaE,QAAzE;AAAA,2BAEE;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,KAAK,EAAEN,UAFX;AAGI,MAAA,OAAO,EAAEG,cAHb;AAG6B,MAAA,WAAW;AAHxC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADN,CASI;AACA;AACA;AAXJ;AAaD;;GAjBuBP,W;UACOH,O,EACVC,Q,EACIA,Q;;;KAHDE,W;AAmBxBH,OAAO,CAACc,OAAR,CAAgB,oBAAhB","sourcesContent":["import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport {useStore} from './store.js';\nimport { useFrame } from '@react-three/fiber';\n\n\nexport default function BottomRight(props) {\n  const { nodes, materials } = useGLTF('/Bottom_Right.gltf')\n  const shellcolor = useStore(state => state.color)\n  const clearnessshell = useStore(state =>state.clearnessshell)\n  return (\n        <mesh {...props} geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} >\n\n          <meshStandardMaterial\n              attach=\"material\"\n              color={shellcolor}\n              opacity={clearnessshell} transparent\n          />\n        </mesh>\n      //to make transparent add:\n      //color=\"#ff0000\" opacity={0.1} transparent\n      //toggle opacity value to change transparency.\n  )\n}\n\nuseGLTF.preload('/Bottom_Right.gltf')\n\n"]},"metadata":{},"sourceType":"module"}