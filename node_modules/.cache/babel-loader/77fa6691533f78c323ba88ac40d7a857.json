{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isObject3D = def => def && def.isObject3D;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [clip, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@react-three/drei/core/Bounds.js"],"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","isObject3D","isBox3","context","createContext","Bounds","children","damping","fit","clip","margin","eps","onFit","ref","useRef","camera","state","controls","invalidate","onFitRef","current","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","useState","animating","focus","Vector3","zoom","goal","box","Box3","api","useMemo","getSize","size","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","setFromObject","copy","isEmpty","position","length","setFromCenterAndSize","maxDistance","near","far","updateProjectionMatrix","update","target","direction","clone","sub","normalize","multiplyScalar","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","addEventListener","removeEventListener","createElement","Provider","value","useBounds","useContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isObject3D = def => def && def.isObject3D;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [clip, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"]},"metadata":{},"sourceType":"module"}