{"ast":null,"code":"var _jsxFileName = \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useStore } from './store.js';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonRounded(props) {\n  _s();\n\n  const clearness = useStore(state => state.clearness);\n  const buttoncolor = useStore(state => state.buttoncolor);\n  const {\n    nodes,\n    materials\n  } = useGLTF('/buttonrounded.gltf');\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    geometry: nodes.mesh_0.geometry,\n    material: nodes.mesh_0.material,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: buttoncolor,\n      opacity: clearness,\n      transparent: true // opacity={0.2} {transparent}\n      // opacity={0.2} transparent\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ButtonRounded, \"Nu8Guw+EbBIEtRs1W9eSVM29QE8=\", false, function () {\n  return [useStore, useStore, useGLTF];\n});\n\n_c = ButtonRounded;\nuseGLTF.preload('/buttonrounded.gltf');\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonRounded\");","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/src/Button.js"],"names":["React","useRef","useGLTF","useStore","useFrame","ButtonRounded","props","clearness","state","buttoncolor","nodes","materials","mesh_0","geometry","material","preload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAMC,SAAS,GAAGJ,QAAQ,CAACK,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA1B;AACF,QAAME,WAAW,GAAGN,QAAQ,CAACK,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBT,OAAO,CAAC,qBAAD,CAApC;AACE,sBACI,qBAAUI,KAAV;AAAiB,IAAA,QAAQ,EAAEI,KAAK,CAACE,MAAN,CAAaC,QAAxC;AAAkD,IAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,CAAaE,QAAzE;AAAA,2BACE;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,KAAK,EAAEL,WAFX;AAGI,MAAA,OAAO,EAAEF,SAHb;AAGwB,MAAA,WAAW,MAHnC,CAKG;AACA;;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjBuBF,a;UACFF,Q,EACAA,Q,EACSD,O;;;KAHPG,a;AAmBxBH,OAAO,CAACa,OAAR,CAAgB,qBAAhB","sourcesContent":["import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport {useStore} from './store.js';\nimport { useFrame } from '@react-three/fiber';\n\nexport default function ButtonRounded(props) {\n    const clearness = useStore(state => state.clearness)\n  const buttoncolor = useStore(state => state.buttoncolor)\n  const { nodes, materials } = useGLTF('/buttonrounded.gltf')\n    return (\n        <mesh {...props} geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} >\n          <meshStandardMaterial\n              attach=\"material\"\n              color={buttoncolor}\n              opacity={clearness} transparent \n              \n             // opacity={0.2} {transparent}\n             // opacity={0.2} transparent\n          />\n        </mesh>\n\n  )\n}\n\nuseGLTF.preload('/buttonrounded.gltf')\n\n"]},"metadata":{},"sourceType":"module"}