{"ast":null,"code":"var _jsxFileName = \"/home/hunter/github/BoxProject/drone-parts-planner/src/Box.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Buttonsincluded(withstring) {\n  _s();\n\n  const {\n    nodes,\n    materials\n  } = useGLTF('/buttonsincluded.gltf');\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    geometry: nodes.mesh_0.geometry,\n    material: nodes.mesh_0.material,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Buttonsincluded, \"3EbVibAGuOW6XeBFAk0EenvHzHI=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Buttonsincluded;\nuseGLTF.preload('/buttonsincluded.gltf');\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttonsincluded\");","map":{"version":3,"sources":["/home/hunter/github/BoxProject/drone-parts-planner/src/Box.js"],"names":["React","useRef","useGLTF","Buttonsincluded","withstring","nodes","materials","mesh_0","geometry","material","preload"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AAAA;;AAClD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBJ,OAAO,CAAC,uBAAD,CAApC;AACA,sBACM;AAAM,IAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC,QAA7B;AAAuC,IAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,CAAaE,QAA9D;AAAA,2BACE;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADN;AASD;;GAXuBN,e;UACOD,O;;;KADPC,e;AAaxBD,OAAO,CAACQ,OAAR,CAAgB,uBAAhB","sourcesContent":["\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Buttonsincluded(withstring) {\n  const { nodes, materials } = useGLTF('/buttonsincluded.gltf')\n  return (\n        <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} >\n          <meshStandardMaterial\n              attach=\"material\"\n              color=\"white\"\n          />\n        </mesh>\n\n  )\n}\n\nuseGLTF.preload('/buttonsincluded.gltf')\n\n"]},"metadata":{},"sourceType":"module"}