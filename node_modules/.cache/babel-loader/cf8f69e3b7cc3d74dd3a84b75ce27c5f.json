{"ast":null,"code":"import _classCallCheck from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { MaterialLoader } from 'three';\n\nvar NodeMaterialLoader = /*#__PURE__*/function (_MaterialLoader) {\n  _inherits(NodeMaterialLoader, _MaterialLoader);\n\n  var _super = _createSuper(NodeMaterialLoader);\n\n  function NodeMaterialLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, NodeMaterialLoader);\n\n    _this = _super.call(this, manager);\n    _this.nodes = {};\n    return _this;\n  }\n\n  _createClass(NodeMaterialLoader, [{\n    key: \"parse\",\n    value: function parse(json) {\n      var material = _get(_getPrototypeOf(NodeMaterialLoader.prototype), \"parse\", this).call(this, json);\n\n      var nodes = this.nodes;\n      var inputNodes = json.inputNodes;\n\n      for (var property in inputNodes) {\n        var uuid = inputNodes[property];\n        material[property] = nodes[uuid];\n      }\n\n      return material;\n    }\n  }, {\n    key: \"setNodes\",\n    value: function setNodes(value) {\n      this.nodes = value;\n      return this;\n    }\n  }]);\n\n  return NodeMaterialLoader;\n}(MaterialLoader);\n\nexport default NodeMaterialLoader;","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/three-stdlib/nodes/loaders/NodeMaterialLoader.js"],"names":["MaterialLoader","NodeMaterialLoader","manager","nodes","json","material","inputNodes","property","uuid","value"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,OAA/B;;IAEMC,kB;;;;;AACJ,8BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFmB;AAGpB;;;;WAED,eAAMC,IAAN,EAAY;AACV,UAAMC,QAAQ,iFAAeD,IAAf,CAAd;;AACA,UAAMD,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMG,UAAU,GAAGF,IAAI,CAACE,UAAxB;;AAEA,WAAK,IAAMC,QAAX,IAAuBD,UAAvB,EAAmC;AACjC,YAAME,IAAI,GAAGF,UAAU,CAACC,QAAD,CAAvB;AACAF,QAAAA,QAAQ,CAACE,QAAD,CAAR,GAAqBJ,KAAK,CAACK,IAAD,CAA1B;AACD;;AAED,aAAOH,QAAP;AACD;;;WAED,kBAASI,KAAT,EAAgB;AACd,WAAKN,KAAL,GAAaM,KAAb;AACA,aAAO,IAAP;AACD;;;;EAtB8BT,c;;AA0BjC,eAAeC,kBAAf","sourcesContent":["import { MaterialLoader } from 'three';\n\nclass NodeMaterialLoader extends MaterialLoader {\n  constructor(manager) {\n    super(manager);\n    this.nodes = {};\n  }\n\n  parse(json) {\n    const material = super.parse(json);\n    const nodes = this.nodes;\n    const inputNodes = json.inputNodes;\n\n    for (const property in inputNodes) {\n      const uuid = inputNodes[property];\n      material[property] = nodes[uuid];\n    }\n\n    return material;\n  }\n\n  setNodes(value) {\n    this.nodes = value;\n    return this;\n  }\n\n}\n\nexport default NodeMaterialLoader;\n"]},"metadata":{},"sourceType":"module"}