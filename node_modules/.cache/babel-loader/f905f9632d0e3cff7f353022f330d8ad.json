{"ast":null,"code":"import _classCallCheck from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from 'three';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\nvar BokehPass = /*#__PURE__*/function (_Pass) {\n  _inherits(BokehPass, _Pass);\n\n  var _super = _createSuper(BokehPass);\n\n  function BokehPass(scene, camera, params) {\n    var _this;\n\n    _classCallCheck(this, BokehPass);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"scene\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"camera\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTargetDepth\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"materialDepth\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"materialBokeh\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"fsQuad\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_oldClearColor\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n\n    _this.scene = scene;\n    _this.camera = camera;\n    var focus = params.focus !== undefined ? params.focus : 1.0;\n    var aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n    var aperture = params.aperture !== undefined ? params.aperture : 0.025;\n    var maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\n\n    var width = params.width || window.innerWidth || 1;\n    var height = params.height || window.innerHeight || 1;\n    _this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    _this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\n\n    _this.materialDepth = new MeshDepthMaterial();\n    _this.materialDepth.depthPacking = RGBADepthPacking;\n    _this.materialDepth.blending = NoBlending; // bokeh material\n\n    if (BokehShader === undefined) {\n      console.error('BokehPass relies on BokehShader');\n    }\n\n    var bokehShader = BokehShader;\n    var bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms['tDepth'].value = _this.renderTargetDepth.texture;\n    bokehUniforms['focus'].value = focus;\n    bokehUniforms['aspect'].value = aspect;\n    bokehUniforms['aperture'].value = aperture;\n    bokehUniforms['maxblur'].value = maxblur;\n    bokehUniforms['nearClip'].value = camera.near;\n    bokehUniforms['farClip'].value = camera.far;\n    _this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    _this.uniforms = bokehUniforms;\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.materialBokeh);\n    _this._oldClearColor = new Color();\n    return _this;\n  }\n\n  _createClass(BokehPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer\n    /*, deltaTime, maskActive */\n    ) {\n      // Render depth into texture\n      this.scene.overrideMaterial = this.materialDepth;\n      renderer.getClearColor(this._oldClearColor);\n      var oldClearAlpha = renderer.getClearAlpha();\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      renderer.setClearColor(0xffffff);\n      renderer.setClearAlpha(1.0);\n      renderer.setRenderTarget(this.renderTargetDepth);\n      renderer.clear();\n      renderer.render(this.scene, this.camera); // Render bokeh composite\n\n      this.uniforms['tColor'].value = readBuffer.texture;\n      this.uniforms['nearClip'].value = this.camera.near;\n      this.uniforms['farClip'].value = this.camera.far;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n\n      this.scene.overrideMaterial = null;\n      renderer.setClearColor(this._oldClearColor);\n      renderer.setClearAlpha(oldClearAlpha);\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n\n  return BokehPass;\n}(Pass);\n\nexport { BokehPass };","map":{"version":3,"sources":["/home/hunter/github/backupbox/BoxProject/drone-parts-planner/node_modules/three-stdlib/postprocessing/BokehPass.js"],"names":["_defineProperty","Pass","FullScreenQuad","WebGLRenderTarget","NearestFilter","MeshDepthMaterial","RGBADepthPacking","NoBlending","UniformsUtils","ShaderMaterial","Color","BokehShader","BokehPass","scene","camera","params","focus","undefined","aspect","aperture","maxblur","width","window","innerWidth","height","innerHeight","renderTargetDepth","minFilter","magFilter","texture","name","materialDepth","depthPacking","blending","console","error","bokehShader","bokehUniforms","clone","uniforms","value","near","far","materialBokeh","defines","Object","assign","vertexShader","fragmentShader","needsSwap","fsQuad","_oldClearColor","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","render","renderToScreen"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from 'three';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\nclass BokehPass extends Pass {\n  constructor(scene, camera, params) {\n    super();\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"renderTargetDepth\", void 0);\n\n    _defineProperty(this, \"materialDepth\", void 0);\n\n    _defineProperty(this, \"materialBokeh\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"_oldClearColor\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    this.scene = scene;\n    this.camera = camera;\n    const focus = params.focus !== undefined ? params.focus : 1.0;\n    const aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n    const aperture = params.aperture !== undefined ? params.aperture : 0.025;\n    const maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\n\n    const width = params.width || window.innerWidth || 1;\n    const height = params.height || window.innerHeight || 1;\n    this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\n\n    this.materialDepth = new MeshDepthMaterial();\n    this.materialDepth.depthPacking = RGBADepthPacking;\n    this.materialDepth.blending = NoBlending; // bokeh material\n\n    if (BokehShader === undefined) {\n      console.error('BokehPass relies on BokehShader');\n    }\n\n    const bokehShader = BokehShader;\n    const bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\n    bokehUniforms['focus'].value = focus;\n    bokehUniforms['aspect'].value = aspect;\n    bokehUniforms['aperture'].value = aperture;\n    bokehUniforms['maxblur'].value = maxblur;\n    bokehUniforms['nearClip'].value = camera.near;\n    bokehUniforms['farClip'].value = camera.far;\n    this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    this.uniforms = bokehUniforms;\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(this.materialBokeh);\n    this._oldClearColor = new Color();\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    // Render depth into texture\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    const oldClearAlpha = renderer.getClearAlpha();\n    const oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(0xffffff);\n    renderer.setClearAlpha(1.0);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera); // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture;\n    this.uniforms['nearClip'].value = this.camera.near;\n    this.uniforms['farClip'].value = this.camera.far;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n\n}\n\nexport { BokehPass };\n"]},"metadata":{},"sourceType":"module"}